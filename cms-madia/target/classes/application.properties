#本地阿里云测试环境
#spring.datasource.url=jdbc:mysql://47.104.248.63:3306/resource?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8&useSSL=false&useInformationSchema=true
#spring.datasource.username=root
#spring.datasource.password=Aaroot1234!
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#测试环境sqlserver
spring.datasource.url=jdbc:sqlserver://192.168.8.200:1433;databaseName=DragonResource
spring.datasource.username= sa
spring.datasource.password=dragonsource@db
spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver

#spring.datasource.url=jdbc:oracle:thin:@127.0.0.1:1521:orcl
#spring.datasource.username=starter2
#spring.datasource.password=starter2
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

beetlsql.ds.dataSource.basePackage=com
#beetlsql.ds.dataSource.dbStyle=org.beetl.sql.core.db.MySqlStyle
beetlsql.ds.dataSource.dbStyle=org.beetl.sql.core.db.SqlServerStyle
#有一个数据源命名为dataSource
beetlsql.mutiple.datasource=dataSource

# 1，1 是管理员密码，相当于启动后就登录，方便测试，系统需要取消这俩个配置
user.id=1
user.orgId=1
#打开审计功能，开发模式应该关闭
audit.enable=false
#单机情况下使用hashmap存放回话，集群下可以参考springboot 使用redis
spring.session.store-type=HASH_MAP 
#spring.cache.type=
spring.cache.type=SIMPLE
logging.level.root=info
logging.level.org.springframework.web.servlet.mvc.method.annotation=warn
#logging.file = my.log
server.port=8080
#html视图交给beetl渲染
beetl.suffix=html
#beetlsql.dataSource.dbStyle=org.beetl.sql.core.db.MySqlStyle
beetlsql.dataSource.dbStyle=org.beetl.sql.core.db.SqlServerStyle
#beetlsql.basePackage=com.ibeetl,com.xxx.yourpackage
beetlsql.basePackage=com
app.name=SpringBoot-Plus
logging.pattern.console=%-4relative [%thread] %-5level %logger{256} %M %L - %msg%n
spring.devtools.restart.exclude=static/**,templates/**,sql/**
#文档预览服务的调用地址，参考https://gitee.com/kekingcn/file-online-preview 安装，没有如下配置无法使用预览功能
file.previewURL=http://localhost:8012/onlinePreview

#这里是限制的上传文件大小为100M
#spring.servlet.multipart.max-file-size=100MB
#spring.servlet.multipart.max-request-size=100MB
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=1000MB
